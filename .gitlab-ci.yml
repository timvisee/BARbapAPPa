image: php:7.3

stages:
  - test
  - deploy-staging
  - deploy-production

cache:
  paths:
  - webapp/vendor/
  - webapp/node_modules/

# Prepare host, configure and install application, set up database
before_script:
  # Prepare host
  - apt-get update -yqq
  - |
    apt-get install git curl gnupg libcurl4-gnutls-dev libicu-dev \
        libmcrypt-dev libvpx-dev libjpeg-dev libpng-dev libxpm-dev zlib1g-dev \
        libfreetype6-dev libxml2-dev libexpat1-dev libbz2-dev libgmp3-dev \
        libldap2-dev unixodbc-dev libpq-dev libsqlite3-dev libaspell-dev \
        libsnmp-dev libpcre3-dev libtidy-dev libzip-dev -yqq

  # Install NVM, set up node with npm
  - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
  - . /root/.nvm/nvm.sh
  - nvm install --lts=carbon
  - nvm use --lts=carbon

  # Install PHP extensions, install/enable Xdebug
  - docker-php-ext-install mbstring pdo_mysql curl json intl gd xml zip bz2 opcache
  - pecl install xdebug
  - docker-php-ext-enable xdebug

  # Install Composer and project dependencies
  - curl -sS https://getcomposer.org/installer | php
  - php composer.phar install
  - php composer.phar dumpautoload -o

  # Change into webapp directory
  - cd webapp/

# PHPUnit test job
test:
  stage: test
  artifacts:
    paths:
      - coverage/
  services:
    - mariadb:latest
  variables:
    MYSQL_DATABASE: barapp
    MYSQL_ROOT_PASSWORD: secret
  script:
    # Set up env file for testing
    - cp .env.gitlab-ci .env

    # Install and build frontend dependencies
    - npm install
    - npm run dev

    # Generate an application key, re-cache, migrate and seed database
    - php artisan key:generate
    - php artisan config:cache
    - php artisan route:cache

    # Migrate and configure currencies
    - php artisan migrate --seed
    - php artisan currency:manage add EUR
    - php artisan currency:manage add USD
    - php artisan currency:update

    # Run PHPUnit tests
    - php vendor/bin/phpunit --coverage-text --colors=never

# Deploy to staging
deploy_staging:
  stage: deploy-staging
  when: manual
  only:
    - /^v(\d+\.)*\d+$/
  environment:
    name: staging
    url: https://staging.barbapappa.app
  script:
    # Install and build frontend dependencies
    - npm install
    - npm run production

    # TODO: run commands on server:
    # TODO: - copy files to server
    # TODO: - stop queue
    # TODO: - put site in maintenance mode
    # TODO: - copy new files to live dir
    # TODO: - config/route cache
    # TODO: - run migrate
    # TODO: - disable maintenance mode
    # TODO: - start queue

# Deploy to production
deploy_production:
  stage: deploy-production
  when: manual
  only:
    - /^v(\d+\.)*\d+$/
  environment:
    name: production
    url: https://barbapappa.app
  script:
    # Install and build frontend dependencies
    - npm install
    - npm run production

    # TODO: run commands on server:
    # TODO: - copy files to server
    # TODO: - stop queue
    # TODO: - put site in maintenance mode
    # TODO: - copy new files to live dir
    # TODO: - config/route cache
    # TODO: - run migrate
    # TODO: - disable maintenance mode
    # TODO: - start queue
